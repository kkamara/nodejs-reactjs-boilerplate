name: Tests Pipeline

on: [push, pull_request]

env:
  NODE_ARGS: "NODE_ENV='test'"

jobs:
  nodejs-crm:
    name: Tests Pipeline (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 'secret'
          MYSQL_DATABASE: 'nodejs_reactjs_boilerplate'
          MYSQL_USER: 'user'
          MYSQL_PASSWORD: 'secret'
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - uses: mskelton/setup-yarn@v3
      with:
        flags: --immutable-cache
    - name: Setup Env Variables
      run: |
          cp .env.testing .env
          sed -i "s/3306/${{ job.services.mysql.ports['3306'] }}/g" config.json
    - name: Install dependencies
      run: yarn install --silent
    - name: Run database migrations
      run: ${{ env.NODE_ARGS }} yarn migrate:test
    - name: Run database seeders
      run: ${{ env.NODE_ARGS }} yarn seed:test
    - name: Run server in background
      run: yarn start &
    - name: Run tests
      run: yarn run test
